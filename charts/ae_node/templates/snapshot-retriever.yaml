apiVersion: v1
kind: ConfigMap
metadata:
  name: snapshot-retriever
  namespace: {{ .Release.Namespace }}
data:
  retrieve-snapshot.sh: |
    #!/bin/bash
    set -euo pipefail
    FILENAME={{ .Values.restoreFromSnapshot.fileName }}
    DATA_DIR=/home/aeternity/node/data
    MNESIA_DIR=$DATA_DIR/mnesia
    REL_ROOT=https://aeternity-database-backups.s3.eu-central-1.amazonaws.com/
    URL=$REL_ROOT$FILENAME
    if [ -f "$FILENAME" ]; then
      echo "File $FILENAME already exists."
    else
      echo "File $FILENAME does not exist. Downloading from $URL."
      apt update && apt install -y wget curl
      echo "File $FILENAME does not exist. Downloading from $URL."
      wget --progress=dot:giga -O ./$FILENAME $URL
    fi

    SIZE=$(du -sk "$MNESIA_DIR" | cut -f1)
    if [ "$SIZE" -gt "1024" ]; then
        echo "Seems like MNESIA_DIR is not empty at $MNESIA_DIR"
        echo "Exiting and will let the node sync the blockchain"
        chown -R 1000:1000 $DATA_DIR/mnesia
        exit 0
    else
      apt update && apt install -y zstd pv curl
      MD5_FILE=$REL_ROOT$FILENAME.md5
      echo "Downloading checksum from $MD5_FILE"
      CHECKSUM=$(curl https://aeternity-database-backups.s3.eu-central-1.amazonaws.com/$FILENAME.md5)
      echo "Correct checksum is $CHECKSUM"
      echo "Calculating $FILENAME checksum..."
      FILE_CHECKSUM=$(pv -fpi20 ./$FILENAME | md5sum | awk '{ print $1 }')
      echo "Checksum of $FILENAME is $FILE_CHECKSUM"
      if [ "$CHECKSUM" != "$FILE_CHECKSUM" ]; then
        echo "Checksums do not match. Exiting."
        exit 1
      fi
      echo "Extracting $FILENAME to $MNESIA_DIR"
      test $? -eq 0 && pv -fpi20 ./$FILENAME | tar --use-compress-program=unzstd -x -C $DATA_DIR
      chown -R 1000:1000 $DATA_DIR/mnesia
    fi
